net {
  type = testnet
}

storage {
  # Directory for storing persistent data
  db.version = 2,
  db.directory = "database-acorn-localtest",
  index.directory = "index-acorn-localtest",

  # You can custom these 14 databases' configs:

  # account, account-index, asset-issue, block, block-index,
  # block_KDB, peers, properties, recent-block, trans,
  # utxo, votes, witness, witness_schedule.

  # Otherwise, db configs will remain defualt and data will be stored in
  # the path of "output-directory" or which is set by "-d" ("--output-directory").

  # Attention: name is a required field that must be set !!!
  properties = [
    //        {
    //          name = "account",
    //          path = "storage_directory_account",
    //          createIfMissing = true,
    //          paranoidChecks = true,
    //          verifyChecksums = true,
    //          compressionType = 1,        // compressed with snappy
    //          blockSize = 4096,           // 4  KB =         4 * 1024 B
    //          writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //          cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //          maxOpenFiles = 100
    //        },
    //        {
    //          name = "account-index",
    //          path = "storage_directory_account_index",
    //          createIfMissing = false,
    //          paranoidChecks = false,
    //          verifyChecksums = false,
    //          compressionType = 1,        // compressed with snappy
    //          blockSize = 2,           // 4  KB =         4 * 1024 B
    //          writeBufferSize = 3, // 10 MB = 10 * 1024 * 1024 B
    //          cacheSize = 4,       // 10 MB = 10 * 1024 * 1024 B
    //          maxOpenFiles = 5
    //        },
  ]


  needToUpdateAsset = true

}

node.discovery = {
  enable = true
  persist = true
  bind.ip = ""
  external.ip = null
}

node.backup {
  port = 21060

  # my priority, each member should use different priority
  priority = 8

  # peer's ip list, can't contain mine
  members = [
    # "ip",
    # "ip"
  ]
}

node {
  # trust node for solidity node
  # trustNode = "ip:port"
  trustNode = "192.168.2.12:22060"

  # expose extension api to public or not
  walletExtensionApi = true

  listen.port = 22060

  connection.timeout = 2 //(sec)

  tcpNettyWorkThreadNum = 0

  udpNettyWorkThreadNum = 1

  # Number of validate sign thread, default availableProcessors / 2
  # validateSignThreadNum = 16

  maxActiveNodes = 30

  maxActiveNodesWithSameIp = 2

  # Rate 이므로 0 ~ 100 사이의 값으로 표시를 하여야 하는가???
  minParticipationRate = 0

  # check the peer data transfer ,disconnect factor
  disconnectNumberFactor = 0.4
  maxConnectNumberFactor = 0.8
  receiveTcpMinDataLength = 2048
  isOpenFullTcpDisconnect = true

  p2p {
    version = 20210827 # 20200319: mainnet; 20200618: testnet
  }

  active = [
    # Active establish connection in any case
    # Sample entries:
    # "ip:port",
    # "ip:port"
  ]

  passive = [
    # Passive accept connection in any case
    # Sample entries:
    # "ip:port",
    # "ip:port"
  ]

  http {
    fullNodePort = 23160
    solidityPort = 23260
  }

  rpc {
    port = 24160
    solidityPort = 24260

    # Number of gRPC thread, default availableProcessors / 2
    # thread = 16

    # The maximum number of concurrent calls permitted for each incoming connection
    # maxConcurrentCallsPerConnection =

    # The HTTP/2 flow control window, default 1MB
    # flowControlWindow =

    # Connection being idle for longer than which will be gracefully terminated
    maxConnectionIdleInMillis = 60000

    # Connection lasting longer than which will be gracefully terminated
    # maxConnectionAgeInMillis =

    # The maximum message size allowed to be received on the server, default 4MB
    # maxMessageSize =

    # The maximum size of header list allowed to be received, default 8192
    # maxHeaderListSize =

    # Transactions can only be broadcast if the number of effective connections is reached.
    minEffectiveConnection = 0
  }

  # Limits the maximum percentage (default 75%) of producing block interval
  # to provide sufficient time to perform other operations e.g. broadcast block
  # blockProducedTimeOut = 75

  # Limits the maximum number (default 700) of transaction from network layer
  # netMaxTrxPerSecond = 700
}


seed.node = {
  # List of the seed nodes
  # Seed nodes are stable full nodes
  # example:
  # ip.list = [
  #   "ip:port",
  #   "ip:port"
  # ]
  ip.list = [
    //    "127.0.0.1:16666"
    //    "127.0.0.1:16616"
  ]
}

genesis.block = {
  # Reserve balance
  assets = [
    {
      accountName = "Oak"
      accountType = "AssetIssue"
      address = "tuzdVq2LYuiF9xxzVWtwVvg1CtAwvacCHX8iNx"
      //      hexString [57061e41ea0ab03223ae745f32334d41f7a40a73a16863a2]
      //      priKeyStr [ec6860c6e0ce733881005fdc586a088ca62b4b308e7a2f626b08a1af0063d8de]
      balance = "50000000000000000"
    },
    {
      accountName = "Squirrel"
      accountType = "AssetIssue"
      address = "tuzdVYRoqSC71hmnpKAw9c7wSuwF12usuhvZGs"
      //      hexString [57061e413400e4b3cd3c6ab26eda8f1a9ccf6f7b687e9910]
      //      priKeyStr [d38fcff5c6932443cd469cce15f3c862b2a1a50a0b56ecdd76bc9cc1b1722be3]
      balance = "0"
    },

    ############  Never Don't change !!   ############
    ############ Ref. Class AccountStore  ############
    {
      accountName = "fee.account"
      accountType = "AssetIssue"
      address = "tuzdVhJkhj1xuaiooSqejB8MMB4XAJjPQWas2X"
      //      hexString [57061e4195647f9a900c4fbed9fa47a3a2ab4a7856ef9178]
      //      priKeyStr [6d7f23586a8bb70edfe32140a6bf08496faf7bee1e0a106807042aede7697c91]
      balance = "0"
    },
    {
      accountName = "bandwidth.account"
      accountType = "AssetIssue"
      address = "tuzdVioN3Jjn8E14dVpK7ZWXX4dDpGkS2j9Vm8"
      //      hexString [57061e41a5c5c4ff1ad10e5efef19c76882e4f246c08a72e]
      //      priKeyStr [c25948446ceea8d709b7325db6c6855bc2656edc5c32c2694960e6df958832ac]
      balance = "0"
    },
    {
      accountName = "energy.account"
      accountType = "AssetIssue"
      address = "tuzdVmfQUQGBBaDoZgCjMSRrWTSx4KEmvJCy87"
      //      hexString [57061e41c52cd9912184236cc617be2cca3e801801d55ef0]
      //      priKeyStr [d2d5faf4b75a12e40fbb364e7ff93fc0a369cfa8c92c8310494dfac76fc2fc6d]
      balance = "0"
    }
    ##################################################
  ]

  witnesses = [
    {
      address: tuzdVmY7n9u1cqFhUcVoTyqDYbGAQayH8qv45T,
      //      hexString [57061e41c3cc00b44c6e14be87a2375967f2cedda80c68fc]
      //      priKeyStr [c14b4479e1f8312c493aa1fcb8d483b5a1f67f869568e1684cc765876f57e048]
      url = "http://acorninc.net",
      voteCount = 10000
    },
    {
      address: tuzdVfP8oD1ekwazAAGCBizRMTaPkmSk8rUFUZ,
      //      hexString [57061e4180485ab46c8cce4310d2aa05e91443efd2d0fc65]
      //      priKeyStr [6ececaa09cf3e886fd8eea68f138a1e9d1e5f5372f8878c2d2c1989781e3794f]
      url = "http://acorninc.net",
      voteCount = 10000
    },
    {
      address: tuzdVjTtwGJx2HnWG6WNs5oFixY8otodQWsotj,
      //      hexString [57061e41ad0f5dd9dd846b52ff5f0caf4e55c7f0a3675a79]
      //      priKeyStr [427f098448048b5b3d546f3fc3fe2dded0697e2979afe49b12b44742ef2df5d6]
      url = "http://acorninc.net",
      voteCount = 10000
    },
    {
      address: tuzdVatRm8kAqoSMfmzMVWihSVyfLWU4rNWK6Z,
      //      hexString [57061e414ef9f3075016bfbaf6a59dc4ba1daeaed4d620cf]
      //      priKeyStr [434b662baf2858011f8a14c30729711383f2954c104c2dce694b16d9f24365f4]
      url = "http://acorninc.net",
      voteCount = 10000
    }
  ]

  timestamp = "0" #2017-8-26 12:00:00

  parentHash = "957dc2d350daecc7bb6a38f3938ebde0a0c1cedafe15f0edae4256a2907449f6"
}

localwitness = [
  c14b4479e1f8312c493aa1fcb8d483b5a1f67f869568e1684cc765876f57e048
]

#localwitnesskeystore = [
#  "src/main/resources/localwitnesskeystore.json"
#]

block = {
  needSyncCheck = false # first node : false, other : true
  maintenanceTimeInterval = 21600000 // 1 day: 86400000(ms), 6 hours: 21600000(ms)
}

# Transaction reference block, default is "head", configure to "solid" can avoid TaPos error
# trx.reference.block = "head" // head;solid;

vm = {
  supportConstant = true
  minTimeRatio = 0.0
  maxTimeRatio = 5.0

  # In rare cases, transactions that will be within the specified maximum execution time (default 10(ms)) are re-executed and packaged
  # longRunningTime = 10
}

committee = {
  allowCreationOfContracts = 1  //mainnet:0 (reset by committee),test:1
  allowAdaptiveEnergy = 0  //mainnet:0 (reset by committee),test:1
  allowTvmTransferTrc10 = 1
  allowSameTokenName = 1
}

log.level = {
  root = "INFO" // TRACE;DEBUG;INFO;WARN;ERROR
}
